openapi: 3.0.3
info:
  title: WitnessOS Consciousness API
  description: |
    The WitnessOS Consciousness API provides access to 13 different consciousness exploration engines,
    multi-engine workflows, AI-enhanced interpretations, and user management capabilities.
    
    ## Features
    - **13 Consciousness Engines**: Numerology, Human Design, Tarot, I-Ching, Enneagram, Sacred Geometry, Biorhythm, Vimshottari, Gene Keys, Sigil Forge, VedicClock-TCM, Face Reading, Biofield
    - **Multi-Engine Workflows**: Predefined patterns for natal, career, spiritual analysis
    - **AI-Enhanced Interpretations**: LLM-powered personalized insights and synthesis
    - **Global Performance**: Sub-200ms response times via Cloudflare Workers edge network
    - **Enterprise Security**: JWT authentication, rate limiting, CORS protection
    
    ## Authentication
    Most endpoints require JWT authentication. Obtain a token via the `/auth/login` endpoint.
    Include the token in the `Authorization` header as `Bearer {token}`.
    
  version: 1.0.0
  contact:
    name: WitnessOS API Support
    url: https://witnessos.space
    email: api@witnessos.space
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.witnessos.space
    description: Production API Gateway (Cloudflare Workers)
  - url: https://webshore-witnessos-aleph-production.up.railway.app
    description: Railway Python Engines (Direct Access)
  - url: http://localhost:8787
    description: Development Server

paths:
  /:
    get:
      summary: API Information
      description: Get basic information about the WitnessOS Consciousness API
      operationId: getApiInfo
      tags:
        - System
      responses:
        '200':
          description: API information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiInfo'

  /health:
    get:
      summary: Health Check
      description: Check the health status of the API and all consciousness engines
      operationId: healthCheck
      tags:
        - System
      responses:
        '200':
          description: Health status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /engines:
    get:
      summary: List Available Engines
      description: Get a list of all available consciousness engines
      operationId: listEngines
      tags:
        - Engines
      responses:
        '200':
          description: List of available engines
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineList'

  /engines/{engineName}/metadata:
    get:
      summary: Get Engine Metadata
      description: Get detailed metadata about a specific consciousness engine
      operationId: getEngineMetadata
      tags:
        - Engines
      parameters:
        - $ref: '#/components/parameters/EngineName'
      responses:
        '200':
          description: Engine metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineMetadata'
        '404':
          $ref: '#/components/responses/NotFound'

  /engines/{engineName}/calculate:
    post:
      summary: Calculate Using Engine
      description: Perform a calculation using a specific consciousness engine
      operationId: calculateEngine
      tags:
        - Engines
      parameters:
        - $ref: '#/components/parameters/EngineName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngineCalculationRequest'
            examples:
              numerology:
                summary: Numerology calculation
                value:
                  input:
                    birth_date: "1990-01-15"
                    full_name: "Alex Morgan"
                  options:
                    useCache: true
              human_design:
                summary: Human Design calculation
                value:
                  input:
                    birth_date: "1990-01-15"
                    birth_time: "14:30"
                    birth_location: "New York, NY"
                  options:
                    includeChannels: true
              tarot:
                summary: Tarot reading
                value:
                  input:
                    question: "What guidance do I need today?"
                    spread_type: "three_card"
                  options:
                    deck: "rider_waite"
              biofield:
                summary: Biofield analysis
                value:
                  input:
                    birth_date: "1990-01-15"
                    image_data: "base64encodedimage..."
                    analysis_mode: "single_frame"
                    biometric_consent: true
                  options:
                    include_spatial_metrics: true
              face_reading:
                summary: Face Reading analysis
                value:
                  input:
                    birth_date: "1990-01-15"
                    processing_consent: true
                    analysis_depth: "detailed"
                  options:
                    include_health_indicators: true
      responses:
        '200':
          description: Calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineCalculationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'

  /engines/biofield/calculate:
    post:
      summary: Biofield Analysis
      description: Perform advanced biofield analysis with spatial and temporal metrics
      operationId: calculateBiofield
      tags:
        - Engines
        - Biofield
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BiofieldRequest'
      responses:
        '200':
          description: Biofield analysis result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BiofieldResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

  /engines/face_reading/calculate:
    post:
      summary: Face Reading Analysis
      description: Perform facial analysis with TCM and Vedic correlations
      operationId: calculateFaceReading
      tags:
        - Engines
        - Face Reading
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FaceReadingRequest'
      responses:
        '200':
          description: Face reading analysis result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaceReadingResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

  /engines/{engineName}/ai-enhanced:
    post:
      summary: AI-Enhanced Engine Calculation
      description: Perform engine calculation with AI-powered personalized interpretation
      operationId: calculateEngineWithAI
      tags:
        - AI-Enhanced
      parameters:
        - $ref: '#/components/parameters/EngineName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIEnhancedRequest'
      responses:
        '200':
          description: AI-enhanced calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIEnhancedResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /batch:
    post:
      summary: Batch Engine Calculations
      description: Perform multiple engine calculations in a single request
      operationId: batchCalculate
      tags:
        - Batch Processing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCalculationRequest'
      responses:
        '200':
          description: Batch calculation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCalculationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /workflows/{workflowType}:
    post:
      summary: Execute Consciousness Workflow
      description: Execute predefined multi-engine consciousness analysis workflows
      operationId: executeWorkflow
      tags:
        - Workflows
      parameters:
        - name: workflowType
          in: path
          required: true
          schema:
            type: string
            enum: [natal, career, spiritual, shadow, relationships, daily, custom]
          description: Type of consciousness workflow to execute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowRequest'
      responses:
        '200':
          description: Workflow execution result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /ai/synthesis:
    post:
      summary: AI Synthesis of Multiple Results
      description: Use AI to synthesize insights from multiple engine results
      operationId: synthesizeWithAI
      tags:
        - AI-Enhanced
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AISynthesisRequest'
      responses:
        '200':
          description: AI synthesis result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AISynthesisResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/register:
    post:
      summary: Register New User
      description: Create a new user account
      operationId: registerUser
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'

  /auth/login:
    post:
      summary: User Login
      description: Authenticate user and receive JWT token
      operationId: loginUser
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/me:
    get:
      summary: Get Current User
      description: Get information about the currently authenticated user
      operationId: getCurrentUser
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Current user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/logout:
    post:
      summary: User Logout
      description: Logout user and invalidate JWT token
      operationId: logoutUser
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    EngineName:
      name: engineName
      in: path
      required: true
      schema:
        type: string
        enum: 
          - numerology
          - human_design
          - tarot
          - iching
          - enneagram
          - sacred_geometry
          - biorhythm
          - vimshottari
          - gene_keys
          - sigil_forge
          - vedicclock_tcm
          - face_reading
          - biofield
      description: Name of the consciousness engine

  schemas:
    ApiInfo:
      type: object
      properties:
        name:
          type: string
          example: "WitnessOS Consciousness API"
        version:
          type: string
          example: "1.0.0"
        environment:
          type: string
          example: "production"
        engines:
          type: integer
          example: 13
        endpoints:
          type: object
        documentation:
          type: string
          example: "https://docs.witnessos.space/api"
        status:
          type: string
          example: "operational"
        requestId:
          type: string

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: "healthy"
        timestamp:
          type: string
          format: date-time
        requestId:
          type: string
        engines:
          type: object
          properties:
            status:
              type: string
              example: "healthy"
            available:
              type: array
              items:
                type: string
        storage:
          type: object
          properties:
            status:
              type: string
              example: "healthy"
            details:
              type: object

    EngineList:
      type: object
      properties:
        engines:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              available:
                type: boolean
              endpoint:
                type: string
        total:
          type: integer
        timestamp:
          type: string
          format: date-time
        requestId:
          type: string

    EngineMetadata:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        version:
          type: string
        inputSchema:
          type: object
        outputSchema:
          type: object
        examples:
          type: array
          items:
            type: object

    EngineCalculationRequest:
      type: object
      required:
        - input
      properties:
        input:
          type: object
          description: Engine-specific input parameters
        options:
          type: object
          properties:
            useCache:
              type: boolean
              default: true
            userId:
              type: string
            saveProfile:
              type: boolean
              default: false

    EngineCalculationResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          description: Engine-specific calculation results
        timestamp:
          type: string
          format: date-time
        processingTime:
          type: number
          description: Processing time in milliseconds
        cached:
          type: boolean
        requestId:
          type: string

    BiofieldRequest:
      type: object
      required:
        - input
      properties:
        input:
          type: object
          required:
            - biometric_consent
          properties:
            birth_date:
              type: string
              format: date
            image_data:
              type: string
              description: Base64 encoded image data
            video_data:
              type: string
              description: Base64 encoded video data
            analysis_mode:
              type: string
              enum: ['single_frame', 'temporal_sequence', 'real_time']
              default: 'single_frame'
            analysis_depth:
              type: string
              enum: ['basic', 'detailed', 'comprehensive']
              default: 'detailed'
            include_spatial_metrics:
              type: boolean
              default: true
            include_temporal_metrics:
              type: boolean
              default: false
            include_color_analysis:
              type: boolean
              default: true
            include_composite_scores:
              type: boolean
              default: true
            integrate_with_face_reading:
              type: boolean
              default: false
            integrate_with_vedic:
              type: boolean
              default: false
            integrate_with_tcm:
              type: boolean
              default: false
            noise_reduction:
              type: boolean
              default: true
            edge_enhancement:
              type: boolean
              default: true
            calibration_mode:
              type: string
              enum: ['auto', 'manual', 'reference']
              default: 'auto'
            biometric_consent:
              type: boolean
              description: User consent for biometric data processing
            store_analysis_only:
              type: boolean
              default: true
        options:
          type: object
          properties:
            useCache:
              type: boolean
              default: true
            userId:
              type: string
            saveProfile:
              type: boolean
              default: false

    BiofieldResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            biofield_metrics:
              type: object
              properties:
                light_quanta_density:
                  type: number
                normalized_area:
                  type: number
                average_intensity:
                  type: number
                inner_noise:
                  type: number
                energy_analysis:
                  type: number
                entropy_form_coefficient:
                  type: number
                fractal_dimension:
                  type: number
                correlation_dimension:
                  type: number
                hurst_exponent:
                  type: number
                lyapunov_exponent:
                  type: number
                dfa_analysis:
                  type: number
                bifurcation_analysis:
                  type: number
                recurrence_analysis:
                  type: number
                nonlinear_mapping:
                  type: number
                body_symmetry:
                  type: number
                contour_complexity:
                  type: number
                pattern_regularity:
                  type: number
            color_analysis:
              type: object
              properties:
                color_distribution:
                  type: object
                color_entropy:
                  type: number
                color_correlation:
                  type: number
                spectral_power_distribution:
                  type: object
                color_coherence:
                  type: number
                color_energy:
                  type: number
                color_symmetry:
                  type: number
                color_contrast:
                  type: number
                dominant_wavelength:
                  type: number
                color_perimeter:
                  type: number
            composite_scores:
              type: object
              properties:
                energy_score:
                  type: number
                symmetry_balance_score:
                  type: number
                coherence_score:
                  type: number
                complexity_score:
                  type: number
                regulation_score:
                  type: number
                color_vitality_score:
                  type: number
                color_coherence_score:
                  type: number
            multi_modal_integration:
              type: object
              properties:
                constitutional_correlation:
                  type: object
                five_elements_alignment:
                  type: object
                panchanga_correlation:
                  type: object
                cosmic_timing_alignment:
                  type: number
                organ_clock_correlation:
                  type: object
                elemental_harmony:
                  type: number
                multi_modal_consistency:
                  type: number
                unified_recommendations:
                  type: array
                  items:
                    type: string
            image_quality_score:
              type: number
            processing_time:
              type: number
            calibration_status:
              type: string
            temporal_trends:
              type: object
            stability_assessment:
              type: number
            biofield_optimization:
              type: array
              items:
                type: string
            practice_suggestions:
              type: array
              items:
                type: string
            data_retention_policy:
              type: string
            biometric_protection_level:
              type: string
        timestamp:
          type: string
          format: date-time
        processingTime:
          type: number
        cached:
          type: boolean
        requestId:
          type: string

    FaceReadingRequest:
      type: object
      required:
        - input
      properties:
        input:
          type: object
          required:
            - processing_consent
          properties:
            birth_date:
              type: string
              format: date
            birth_time:
              type: string
            birth_location:
              type: string
            processing_consent:
              type: boolean
              description: User consent for facial analysis processing
            analysis_depth:
              type: string
              enum: ['basic', 'detailed', 'comprehensive']
              default: 'detailed'
            include_health_indicators:
              type: boolean
              default: true
            integrate_with_vedic:
              type: boolean
              default: false
            integrate_with_tcm:
              type: boolean
              default: true
            store_biometric_data:
              type: boolean
              default: false
        options:
          type: object
          properties:
            useCache:
              type: boolean
              default: true
            userId:
              type: string
            saveProfile:
              type: boolean
              default: false

    FaceReadingResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            constitutional_analysis:
              type: object
              properties:
                dominant_element:
                  type: string
                secondary_element:
                  type: string
                constitutional_type:
                  type: string
                elemental_balance:
                  type: object
                constitutional_strength:
                  type: number
            twelve_houses_analysis:
              type: object
              additionalProperties:
                type: object
                properties:
                  house_name:
                    type: string
                  reading:
                    type: string
                  health_indicators:
                    type: array
                    items:
                      type: string
                  personality_traits:
                    type: array
                    items:
                      type: string
                  life_areas:
                    type: array
                    items:
                      type: string
            five_elements_assessment:
              type: object
              additionalProperties:
                type: object
                properties:
                  element_name:
                    type: string
                  strength:
                    type: number
                  characteristics:
                    type: array
                    items:
                      type: string
                  health_correlations:
                    type: array
                    items:
                      type: string
                  recommendations:
                    type: array
                    items:
                      type: string
            health_indicators:
              type: object
              properties:
                vitality_score:
                  type: number
                stress_indicators:
                  type: array
                  items:
                    type: string
                health_recommendations:
                  type: array
                  items:
                    type: string
                constitutional_vulnerabilities:
                  type: array
                  items:
                    type: string
                strengthening_practices:
                  type: array
                  items:
                    type: string
            personality_insights:
              type: object
              properties:
                core_traits:
                  type: array
                  items:
                    type: string
                behavioral_patterns:
                  type: array
                  items:
                    type: string
                communication_style:
                  type: string
                decision_making_style:
                  type: string
                relationship_patterns:
                  type: array
                  items:
                    type: string
            integration_recommendations:
              type: object
              properties:
                vedic_correlations:
                  type: object
                tcm_correlations:
                  type: object
                lifestyle_recommendations:
                  type: array
                  items:
                    type: string
                optimal_practices:
                  type: array
                  items:
                    type: string
        timestamp:
          type: string
          format: date-time
        processingTime:
          type: number
        cached:
          type: boolean
        requestId:
          type: string

    AIEnhancedRequest:
      type: object
      required:
        - input
      properties:
        input:
          type: object
        aiConfig:
          type: object
          properties:
            model:
              type: string
              default: "anthropic/claude-3-sonnet"
            maxTokens:
              type: integer
              default: 2000
            temperature:
              type: number
              default: 0.7
            focusArea:
              type: string

    AIEnhancedResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            calculation:
              type: object
            aiInterpretation:
              type: object
              properties:
                summary:
                  type: string
                insights:
                  type: array
                  items:
                    type: string
                guidance:
                  type: string
                confidence:
                  type: number
        timestamp:
          type: string
          format: date-time

    BatchCalculationRequest:
      type: object
      required:
        - calculations
      properties:
        calculations:
          type: array
          items:
            type: object
            required:
              - engine
              - input
            properties:
              engine:
                type: string
              input:
                type: object
              options:
                type: object
        options:
          type: object
          properties:
            parallel:
              type: boolean
              default: true
            userId:
              type: string

    BatchCalculationResponse:
      type: object
      properties:
        success:
          type: boolean
        results:
          type: array
          items:
            type: object
            properties:
              engine:
                type: string
              success:
                type: boolean
              data:
                type: object
              error:
                type: string
        timestamp:
          type: string
          format: date-time
        totalProcessingTime:
          type: number

    WorkflowRequest:
      type: object
      required:
        - userProfile
      properties:
        userProfile:
          type: object
          properties:
            fullName:
              type: string
            birthDate:
              type: string
              format: date
            birthTime:
              type: string
            birthLocation:
              type: string
        intention:
          type: string
        options:
          type: object

    WorkflowResponse:
      type: object
      properties:
        success:
          type: boolean
        workflow:
          type: string
        results:
          type: object
          properties:
            engines:
              type: array
              items:
                type: object
            synthesis:
              type: object
            recommendations:
              type: array
              items:
                type: string
        timestamp:
          type: string
          format: date-time

    AISynthesisRequest:
      type: object
      required:
        - results
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              engine:
                type: string
              data:
                type: object
        userContext:
          type: object
        aiConfig:
          type: object

    AISynthesisResponse:
      type: object
      properties:
        success:
          type: boolean
        synthesis:
          type: object
          properties:
            overview:
              type: string
            keyThemes:
              type: array
              items:
                type: string
            patterns:
              type: array
              items:
                type: object
            recommendations:
              type: array
              items:
                type: string
            confidence:
              type: number

    UserRegistration:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        name:
          type: string

    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
        token:
          type: string
        user:
          $ref: '#/components/schemas/User'
        expiresAt:
          type: string
          format: date-time

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        verified:
          type: boolean
        createdAt:
          type: string
          format: date-time
        preferences:
          type: object

    MessageResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        timestamp:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        requestId:
          type: string

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Conflict:
      description: Resource conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    RateLimited:
      description: Rate limit exceeded
      headers:
        X-RateLimit-Limit:
          schema:
            type: integer
          description: Request limit per window
        X-RateLimit-Remaining:
          schema:
            type: integer
          description: Requests remaining in current window
        X-RateLimit-Reset:
          schema:
            type: string
            format: date-time
          description: Time when rate limit resets
        Retry-After:
          schema:
            type: integer
          description: Seconds to wait before retrying
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

tags:
  - name: System
    description: System information and health monitoring
  - name: Engines
    description: Individual consciousness engine operations
  - name: AI-Enhanced
    description: AI-powered enhanced calculations and insights
  - name: Batch Processing
    description: Multiple engine calculations in single requests
  - name: Workflows
    description: Predefined multi-engine consciousness analysis patterns
  - name: Authentication
    description: User authentication and account management
  - name: Biofield
    description: Biofield analysis and visualization
  - name: Face Reading
    description: Facial analysis with TCM and Vedic correlations
